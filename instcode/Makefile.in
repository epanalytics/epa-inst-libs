STATIC_INST_LIB  = @STATIC_INST_LIB@
ifeq ($(STATIC_INST_LIB),yes)
	TARGETS = libcounter.a  libsimulator.a  libtimer.a  libiowrapper.a
else
	TARGETS = libcounter.so libsimulator.so libtimer.so libiowrapper.so libiowrapper_preld.so
endif

MPICC       = @MPICC@
CFLAGS      = @CFLAGS@

EXTRA_FLAGS = -w
SHARED_OPT  = -fPIC
SHARED_LIB  = -shared
AR          = ar rcs
PRELD_FLAGS = -DPRELOAD_WRAPPERS $(SHARED_OPT)
PRELD_LINK  = -ldl

# Jade
#OPT         = -O3 -w -I/opt/mpt/3.5.0/xt/mpich2-pgi/include# --save-temps
#CC          = $(GNU_C) $(DBG) $(OPT)
#SHARED_LIB  = -shared

# Diamond
#OPT	    = -O3 -w
#CC          = $(GNU_C) $(DBG) $(OPT)
#SHARED_LIB  = -shared

# Ubuntu Linux (no MPI)
#OPT         = -O3 -w
#CC          = $(GNU_C) $(DBG) $(OPT)
#SHARED_LIB  = -shared

# Ubuntu Linux MPICH2
#OPT         = -O3 -w -I/usr/include/mpich2
#CC          = $(GNU_C) $(DBG) $(OPT)

#### -DNO_SAMPLING_MODE    : Add to disable sampling (note that MAX visit count is still on).
#### -DEXTENDED_SAMPLING   : Add to vary the ignore and sampling intervals during sampling
#### -DFINE_GRAIN_SAMPLING : Add to increase the granularity of sampling. Smaller intervals.
#### -DPER_SET_RECENT      : Add to simulcate LRU using per set most recent entry for replacement
#EXTRA_DEF = -DNO_SAMPLING_MODE -DPER_SET_RECENT -DSHIFT_ADDRESS_BUFFER @MPI_FLAGS@ # default for MultiMAPS tracing
EXTRA_DEF = -DEXTENDED_SAMPLING -DPER_SET_RECENT -DSHIFT_ADDRESS_BUFFER @MPI_FLAGS@ # default for application tracing
#EXTRA_DEF = -DIGNORE_ACTUAL_SIMULATION -DNO_SAMPLING_MODE -DPER_SET_RECENT -DSHIFT_ADDRESS_BUFFER @MPI_FLAGS@ # no simulation

EXTRA_LIBS  =
EXTRA_INC   = -I../instcode

LIBDIR      = ../lib

SRCS        = CounterFunctions.c SimulationFunctions.c TimerFunctions.c IOWrappers.c CacheSimulationCommon.c
OBJS        = CounterFunctions.o SimulationFunctions.o TimerFunctions.o IOWrappers.o CacheSimulationCommon.o

all: IOEvents.h $(TARGETS)
preload: IOEvents.h libiowrappers_preld.so

%.o: %.c
	$(MPICC) $(CFLAGS) $(EXTRA_FLAGS) $(EXTRA_DEF) $(EXTRA_INC) -c -o $@ $< $(SHARED_OPT)

libcounter.so : CounterFunctions.o
	$(MPICC) $(SHARED_LIB) -o $@ CounterFunctions.o $(EXTRA_LIBS)
libcounter.a : CounterFunctions.o
	$(AR) $@ CounterFunctions.o

libsimulator.so : SimulationFunctions.o CacheSimulationCommon.o
	$(MPICC) $(SHARED_LIB) -o $@ SimulationFunctions.o CacheSimulationCommon.o $(EXTRA_LIBS)
libsimulator.a : SimulationFunctions.o CacheSimulationCommon.o
	$(AR) $@ SimulationFunctions.o CacheSimulationCommon.o

libtimer.so : TimerFunctions.o
	$(MPICC) $(SHARED_LIB) -o $@ TimerFunctions.o $(EXTRA_LIBS)
libtimer.a : TimerFunctions.o
	$(AR) $@ TimerFunctions.o

libiowrapper.so : IOWrappers.o
	$(MPICC) $(SHARED_LIB) -o $@ IOWrappers.o -L$(LIBDIR) $(EXTRA_LIBS)
libiowrapper_preld.so:
	$(MPICC) $(CFLAGS) $(EXTRA_FLAGS) $(EXTRA_DEF) $(EXTRA_INC) -c -o IOWrappers.o IOWrappers.c $(PRELD_FLAGS)
	$(MPICC) $(SHARED_LIB) -o $@ IOWrappers.o -L$(LIBDIR) $(EXTRA_LIBS) $(PRELD_FLAGS) $(PRELD_LINK)
libiowrapper.a : IOWrappers.o
	$(AR) $@ IOWrappers.o

IOEvents.h:
	../scripts/generateIOevents.py

clean: 
	rm -f *.o *.i *.s *.ii *.a *.so $(TARGETS) IOEvents.c IOEvents.h

install: $(TARGETS)
	cp $(TARGETS) $(LIBDIR)
